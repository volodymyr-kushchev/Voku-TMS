version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: TaskManagement.API/Dockerfile
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=TaskManagementDb;User Id=sa;Password=Your_password123;TrustServerCertificate=True
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
    networks:
      - app-network
    depends_on:
      sqlserver:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Your_password123
      - MSSQL_PID=Express
      - MSSQL_COLLATION=SQL_Latin1_General_CP1_CI_AS
      - MSSQL_MEMORY_LIMIT_MB=2048
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - app-network
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Your_password123 -Q "SELECT 1" -b -o /dev/null
      interval: 5s
      timeout: 2s
      retries: 20
      start_period: 30s

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_NODENAME=rabbit@localhost
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 60s

networks:
  app-network:
    driver: bridge

volumes:
  sqlserver_data:
  rabbitmq_data: 